{"version":3,"sources":["componenets/Center.tsx","componenets/Header.tsx","componenets/Location.tsx","componenets/Icon.tsx","componenets/Temperature.tsx","componenets/Description.tsx","componenets/Footer.tsx","helpers/functions.ts","componenets/Day.tsx","componenets/Hour.tsx","pages/Forecast.tsx","pages/Home.tsx","componenets/Loading.tsx","pages/TimeMachine.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Center","id","children","height","colClass","backgroundColor","minHeight","Row","style","className","Header","props","setUnit","Nav","Item","Link","as","to","bsPrefix","offlabel","onlabel","size","onstyle","offstyle","checked","onChange","sessionStorage","unit","Location","location","Icon","options","useEffect","icons","Skycons","color","add","instance","undefined","icon","play","marginTop","top","width","iconWidth","iconHeight","Temperature","tempC","tempF","Description","description","Footer","weather","a","getWeather","JSON","parse","position","time","getTMWeather","url","lat","long","replace","fetch","response","json","data","refreshTMWeather","setWeather","weatherInfo","setTMLoaded","TMWeather","Math","round","getTime","then","console","log","timezone","split","daily","temperatureHigh","celsius","currently","summary","setItem","stringify","fahrenheit","epochToDate","epoch","date","Date","setUTCSeconds","Day","day","precipitation","high","low","celsiusL","celsiusH","textAlign","margin","Col","getDay","paddingRight","paddingLeft","Hour","temp","appTemp","celsiusT","appCelsius","prefix","borderTop","borderBottom","getHours","lineHeight","Forecast","tm","week","hourly","pop","paddingTop","map","idx","key","temperature","precipProbability","apparentTemperature","temperatureLow","Home","loaded","setLoaded","refreshWeather","fontSize","Loading","name","TimeMachine","useState","TMLoaded","setTime","setTMWeather","Form","selected","fontWeight","marginLeft","App","blocked","setBlocked","navigator","geolocation","getCurrentPosition","coords","longitude","latitude","alert","initWeather","variant","defaultActiveKey","exact","path","component","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.1be7cdbc.chunk.js","sourcesContent":["import React, { ReactNode } from \"react\";\nimport Row from \"react-bootstrap/Row\";\n\ntype Center = {\n  children?: ReactNode;\n  height?: string;\n  minHeight?: string;\n  id?: string;\n  backgroundColor?: string;\n  colClass: number | string;\n};\nfunction Center({\n  id,\n  children,\n  height,\n  colClass,\n  backgroundColor,\n  minHeight,\n}: Center) {\n  return (\n    <Row\n      id={id}\n      style={{\n        height: height,\n        backgroundColor: backgroundColor,\n        minHeight: minHeight,\n      }}\n    >\n      <div className={`col ${colClass} ml-auto mr-auto my-auto`}>\n        {children}\n      </div>\n    </Row>\n  );\n}\n\nexport default Center;\n","import React from \"react\";\nimport Nav, { NavProps } from \"react-bootstrap/Nav\";\nimport { Link } from \"react-router-dom\";\nimport BootstrapSwitchButton from \"bootstrap-switch-button-react\";\nimport Center from \"./Center\";\n\ntype HeaderProp = {\n  props: NavProps;\n  setUnit: React.Dispatch<React.SetStateAction<\"C\" | \"F\">>;\n};\n\nfunction Header({ props, setUnit }: HeaderProp) {\n  function handleUnitChange() {\n    if (sessionStorage.unit === \"F\") setUnit(\"C\");\n    else setUnit(\"F\");\n  }\n  return (\n    <Nav {...props}>\n      <Nav.Item>\n        <Nav.Link as={Link} to=\"/Weather/\">\n          Home\n        </Nav.Link>\n      </Nav.Item>\n      <Nav.Item>\n        <Nav.Link as={Link} to=\"/Weather/timemachine\">\n          Time Machine\n        </Nav.Link>\n      </Nav.Item>\n      <Nav.Item bsPrefix=\"ml-auto mr-3\">\n        <Center height=\"100%\" colClass=\"col-auto\">\n          <BootstrapSwitchButton\n            offlabel=\"°C\"\n            onlabel=\"°F\"\n            size=\"sm\"\n            onstyle=\"dark\"\n            offstyle=\"secondary\"\n            checked={true}\n            onChange={handleUnitChange}\n          />\n        </Center>\n      </Nav.Item>\n    </Nav>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\nimport CSS from \"csstype\";\ntype LocationProp = {\n  location: string;\n  style?: CSS.Properties;\n};\n\nfunction Location({ style, location }: LocationProp) {\n  return (\n    <div style={style} className={\"location\"}>\n      {location}\n    </div>\n  );\n}\n\nexport default Location;\n","import React, { useEffect } from \"react\";\nimport { Skycons } from \"skycons-ts\";\nimport { IconInfo } from \"../helpers/interfaces\";\ntype IconProp = {\n  options: IconInfo;\n};\n\nfunction Icon({ options }: IconProp) {\n  useEffect(function () {\n    let icons = new Skycons({ color: options.color });\n    icons.add(\n      `icon${options.instance}`,\n      options.icon !== undefined ? options.icon : \"rain\"\n    );\n    icons.play();\n  });\n  return (\n    <canvas\n      style={{ marginTop: options.top }}\n      id={`icon${options.instance}`}\n      width={options.iconWidth}\n      height={options.iconHeight}\n    />\n  );\n}\n\nexport default Icon;\n","import React, { CSSProperties } from \"react\";\ntype TemperatureProp = {\n  tempC: number;\n  tempF: number;\n  unit: \"F\" | \"C\";\n  style?: CSSProperties;\n};\nfunction Temperature({ style, tempC, tempF, unit }: TemperatureProp) {\n  if (unit === \"C\")\n    return (\n      <div style={style} className=\"temp-c\">\n        {tempC}\n      </div>\n    );\n  else\n    return (\n      <div style={style} className=\"temp-f\">\n        {tempF}\n      </div>\n    );\n}\nexport default Temperature;\n","import React from \"react\";\nimport CSS from \"csstype\";\ntype DescriptionProp = {\n  description: string;\n  style?: CSS.Properties;\n};\nfunction Description({ style, description }: DescriptionProp) {\n  return (\n    <div style={style} className=\"description\">\n      {description}\n    </div>\n  );\n}\n\nexport default Description;\n","import React from \"react\";\n\ntype FooterProp = {\n  style: React.CSSProperties;\n};\nfunction Footer({ style }: FooterProp) {\n  return (\n    <div className=\"footer\" style={style}>\n      Copyright © 2020. Developed by Kolawole Campbell.\n    </div>\n  );\n}\n\nexport default Footer;\n","import { Geo, WeatherInfo } from \"./interfaces\";\nimport React from \"react\";\nimport { DayOfWeek } from \"./types\";\n\nasync function weather() {\n    return await getWeather(JSON.parse(sessionStorage.position));\n}\n\n\nasync function TMWeather(time: number) {\n    return await getTMWeather(JSON.parse(sessionStorage.position), time);\n}\n\nasync function getWeather(position: Geo) {\n    let url = `https://cors-anywhere.herokuapp.com/\n     https://api.darksky.net/forecast/9ab479cdd941d8bb66332fa8f81551b9/\n     ${position.lat},${position.long}`.replace(/\\s/g, '');\n    let response = await fetch(url, {\n    });\n    let data = await response.json();\n    return data;\n}\n\nasync function getTMWeather(position: Geo, time: number) {\n    let url = `https://cors-anywhere.herokuapp.com/\n     https://api.darksky.net/forecast/9ab479cdd941d8bb66332fa8f81551b9/\n     ${position.lat},${position.long},${time}`.replace(/\\s/g, '');\n    let response = await fetch(url, {\n    });\n    let data = await response.json();\n    return data;\n}\n\nexport function initWeather(\n    position: Geo,\n    weatherInfo: WeatherInfo,\n    setLoaded: React.Dispatch<React.SetStateAction<boolean>>,\n    setBlocked: React.Dispatch<React.SetStateAction<boolean>>\n) {\n    function success(location: any) {\n        console.log(\"init\")\n        position.long = location.coords.longitude;\n        position.lat = location.coords.latitude;\n        sessionStorage.setItem(\"position\", JSON.stringify(position))\n        weather().then(weather => {\n            weatherInfo.location = weather.timezone.split(\"/\")[1].replace(\"_\", \" \");\n            weatherInfo.tempF = Math.round(weather.currently.temperature);\n            weatherInfo.tempC = Math.round(celsius(weather.currently.temperature));\n            weatherInfo.icon = weather.currently.icon;\n            weatherInfo.description = weather.currently.summary;\n            sessionStorage.setItem(\"weather\", JSON.stringify(weather));\n            sessionStorage.setItem(\"TMWeather\", JSON.stringify(weather));\n            setLoaded(true);\n            console.log(\"StateChanged\");\n        })\n    }\n    function fail() {\n        setBlocked(true);\n    }\n    if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(success, fail);\n    } else {\n        alert(\"Sorry, your browser does not support geolocation services.\");\n    }\n};\n\nexport function refreshWeather(\n    setWeather: React.Dispatch<React.SetStateAction<WeatherInfo>>,\n    weatherInfo: WeatherInfo, setLoaded: React.Dispatch<React.SetStateAction<boolean>>\n) {\n    weather().then(weather => {\n        weatherInfo.location = weather.timezone.split(\"/\")[1].replace(\"_\", \" \");\n        weatherInfo.tempF = Math.round(weather.currently.temperature);\n        weatherInfo.tempC = Math.round(celsius(weather.currently.temperature));\n        weatherInfo.icon = weather.currently.icon;\n        weatherInfo.description = weather.currently.summary;\n        sessionStorage.setItem(\"weather\", JSON.stringify(weather));\n        setLoaded(true);\n    });\n}\n\n\nexport function refreshTMWeather(\n    setWeather: React.Dispatch<React.SetStateAction<WeatherInfo>>,\n    weatherInfo: WeatherInfo, setTMLoaded: React.Dispatch<React.SetStateAction<boolean>>,\n    time: Date\n) {\n    TMWeather(Math.round(time.getTime() / 1000)).then(weather => {\n        console.log(\"TMWeather\")\n        weatherInfo.location = weather.timezone.split(\"/\")[1].replace(\"_\", \" \");\n        weatherInfo.tempF = Math.round(weather.daily.data[0].temperatureHigh);\n        weatherInfo.tempC = Math.round(celsius(weather.daily.data[0].temperatureHigh));\n        weatherInfo.icon = weather.currently.icon;\n        weatherInfo.description = weather.daily.data[0].summary;\n        sessionStorage.setItem(\"TMWeather\", JSON.stringify(weather));\n        setTMLoaded(true);\n    });\n}\nexport function celsius(fahrenheit: number) {\n    return (fahrenheit - 32) * 5 / 9;\n}\n\nexport function truthy(val: any) {\n    if (val) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\nexport function epochToDate(epoch: number) {\n    let date = new Date(0);\n    date.setUTCSeconds(epoch);\n    return date;\n}\n\nexport function dateToDayOfWeek(date: Date): DayOfWeek {\n    let dayLookup: Array<DayOfWeek>;\n    dayLookup = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n    return dayLookup[date.getDay()];\n}\n","import React, { CSSProperties } from \"react\";\nimport { IconKey } from \"skycons-ts\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Icon from \"./Icon\";\nimport { celsius, dateToDayOfWeek } from \"../helpers/functions\";\nimport Temperature from \"./Temperature\";\n\ntype DayProp = {\n  day: Date;\n  precipitation: number;\n  icon: IconKey;\n  low: number;\n  high: number;\n  unit: \"C\" | \"F\";\n};\n\nfunction Day({ day, precipitation, high, icon, low, unit }: DayProp) {\n  let celsiusL = Math.round(celsius(low));\n  let celsiusH = Math.round(celsius(high));\n  let style = {\n    textAlign: \"left\",\n    margin: \"0.2vw\",\n  } as CSSProperties;\n  let prefix = \"col my-auto\";\n  return (\n    <Row style={{ ...style }}>\n      <Col bsPrefix=\"col col-3 my-auto\">{`${dateToDayOfWeek(day)}`}</Col>\n      <Col\n        style={{ paddingRight: \"0px\" }}\n        bsPrefix={`col col-3 my-auto precipitation`}\n      >{`${Math.round(precipitation * 100)}%`}</Col>\n      <Col style={{ paddingLeft: \"0px\" }} bsPrefix={prefix}>\n        <Icon\n          options={{\n            color: \"white\",\n            icon: icon,\n            iconHeight: 40,\n            iconWidth: 40,\n            instance: day.getDay() + 2,\n          }}\n        />\n      </Col>\n      <Col bsPrefix={prefix}>\n        <Temperature style={style} tempC={celsiusL} tempF={low} unit={unit} />\n      </Col>\n      <Col bsPrefix={prefix}>\n        <Temperature style={style} tempC={celsiusH} tempF={high} unit={unit} />\n      </Col>\n    </Row>\n  );\n}\n\nexport default Day;\n","import React, { CSSProperties } from \"react\";\nimport { IconKey } from \"skycons-ts\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Icon from \"./Icon\";\nimport { celsius, dateToDayOfWeek } from \"../helpers/functions\";\nimport Temperature from \"./Temperature\";\n\ntype HourProp = {\n  day: Date;\n  precipitation: number;\n  icon: IconKey;\n  temp: number;\n  unit: \"C\" | \"F\";\n  summary: string;\n  appTemp: number;\n};\n\nfunction Hour({\n  day,\n  precipitation,\n  icon,\n  temp,\n  unit,\n  appTemp,\n  summary,\n}: HourProp) {\n  let celsiusT = Math.round(celsius(temp));\n  let appCelsius = Math.round(celsius(appTemp));\n  let style = {\n    textAlign: \"left\",\n    margin: \"0.2vw\",\n    width: \"100%\",\n  } as CSSProperties;\n  let prefix = \"col col-auto my-auto ml-auto mr-auto\";\n\n  return (\n    <Row\n      style={{\n        ...style,\n        borderTop: \"1px solid white\",\n        borderBottom: \"1px solid white\",\n      }}\n    >\n      <Col\n        bsPrefix={\"col col-1 my-auto ml-auto mr-auto\"}\n      >{`${day.getHours()}:00`}</Col>\n      <Col bsPrefix={\"col col-2 my-auto ml-auto mr-auto\"}>{`${summary}`}</Col>\n      <Col bsPrefix={\"col col-auto my-auto ml-auto mr-auto d-none d-sm-block\"}>\n        <Icon\n          options={{\n            top: \"3px\",\n            color: \"white\",\n            icon: icon,\n            iconHeight: 30,\n            iconWidth: 30,\n            instance: day.getHours() + 10,\n          }}\n        />\n      </Col>\n      <Col\n        style={{ lineHeight: \"2rem\" }}\n        bsPrefix={`col col-auto my-auto ml-auto mr-auto precipitation`}\n      >{`${Math.round(precipitation * 100)}%`}</Col>\n      <Col bsPrefix={prefix}>\n        <Temperature style={style} tempC={celsiusT} tempF={temp} unit={unit} />\n      </Col>\n      <Col bsPrefix={prefix}>\n        <Temperature\n          style={style}\n          tempC={appCelsius}\n          tempF={appTemp}\n          unit={unit}\n        />\n      </Col>\n    </Row>\n  );\n}\n\nexport default Hour;\n","import React from \"react\";\nimport Day from \"../componenets/Day\";\nimport { epochToDate } from \"../helpers/functions\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Hour from \"../componenets/Hour\";\nimport Center from \"../componenets/Center\";\ntype ForecastProp = {\n  id: string;\n  unit: \"C\" | \"F\";\n  tm?: boolean;\n};\n\nfunction Forecast({ id, unit, tm }: ForecastProp) {\n  let weather = JSON.parse(sessionStorage.weather);\n  let week = weather.daily.data;\n  if (sessionStorage.weather) {\n    if (tm) {\n      weather = JSON.parse(sessionStorage.TMWeather);\n      week = weather.hourly.data;\n    } else week.pop();\n    return (\n      <Row id={id} style={{ paddingTop: \"5px\" }}>\n        <Col\n          bsPrefix={`col col-xs-auto ${\n            tm ? \"col-lg-6\" : \"col-lg-6\"\n          } mr-auto ml-auto`}\n        >\n          {!tm\n            ? week.map((day: any, idx: number) => (\n                <Day\n                  day={epochToDate(day.time)}\n                  high={Math.round(day.temperatureHigh)}\n                  icon={day.icon}\n                  low={Math.round(day.temperatureLow)}\n                  key={idx}\n                  precipitation={day.precipProbability}\n                  unit={unit}\n                />\n              ))\n            : week.map((day: any, idx: number) => (\n                <Center key={idx} minHeight=\"60px\" colClass=\"col-12\">\n                  <Hour\n                    day={epochToDate(day.time)}\n                    temp={Math.round(day.temperature)}\n                    icon={day.icon}\n                    precipitation={day.precipProbability}\n                    unit={unit}\n                    summary={day.summary}\n                    appTemp={Math.round(day.apparentTemperature)}\n                  />\n                </Center>\n              ))}\n        </Col>\n      </Row>\n    );\n  } else return <div></div>;\n}\n\nexport default Forecast;\n","import Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Center from \"../componenets/Center\";\nimport Location from \"../componenets/Location\";\nimport Icon from \"../componenets/Icon\";\nimport Temperature from \"../componenets/Temperature\";\nimport Description from \"../componenets/Description\";\nimport Footer from \"../componenets/Footer\";\nimport React, { useEffect } from \"react\";\nimport { Geo, IconInfo, WeatherInfo } from \"../helpers/interfaces\";\nimport Forecast from \"./Forecast\";\nimport {\n  initWeather,\n  refreshTMWeather,\n  refreshWeather,\n  truthy,\n} from \"../helpers/functions\";\n\ntype HomeProp = {\n  weatherInfo: WeatherInfo & IconInfo;\n  loaded: boolean;\n  unit: \"C\" | \"F\";\n  setLoaded: React.Dispatch<React.SetStateAction<boolean>>;\n  setWeather: React.Dispatch<React.SetStateAction<WeatherInfo & IconInfo>>;\n};\n\nfunction Home({ weatherInfo, loaded, setLoaded, setWeather, unit }: HomeProp) {\n  useEffect(\n    function () {\n      refreshWeather(setWeather, weatherInfo, setLoaded);\n      sessionStorage.setItem(\"unit\", unit);\n    },\n    [loaded, unit]\n  );\n\n  return (\n    <div className=\"main\">\n      <Center id=\"home\" colClass=\"col-auto col-lg-6\" height=\"100%\">\n        <Row style={{ margin: \"40px 0 60px 0\" }}>\n          <Col>\n            <Center colClass=\"col-auto\" height=\"100%\">\n              <Location\n                style={{ fontSize: \"2.7em\" }}\n                location={weatherInfo.location}\n              />\n            </Center>\n          </Col>\n          <Col>\n            <Center colClass=\"col-auto\" height=\"100%\">\n              <Icon options={weatherInfo} />\n            </Center>\n          </Col>\n        </Row>\n        <Row style={{ margin: \"0 0 40px 0\" }}>\n          <Col>\n            <Center colClass=\"col-auto\" height=\"100%\">\n              <Temperature\n                style={{ textAlign: \"center\", fontSize: \"3rem\" }}\n                tempC={weatherInfo.tempC}\n                tempF={weatherInfo.tempF}\n                unit={sessionStorage.unit}\n              />\n              <Description\n                style={{ fontSize: \"1rem\" }}\n                description={weatherInfo.description}\n              />\n            </Center>\n          </Col>\n        </Row>\n      </Center>\n      <Forecast id=\"forecast\" unit={sessionStorage.unit} />\n      <Footer style={{ position: \"absolute\" }} />\n    </div>\n  );\n}\n\nexport default Home;\n","import React from \"react\";\nimport Spinner from \"react-spinkit\";\nimport Center from \"./Center\";\ntype LoadingProp = {\n  name:\n    | \"three-bounce\"\n    | \"double-bounce\"\n    | \"rotating-plane\"\n    | \"folding-cube\"\n    | \"wave\"\n    | \"wandering-cubes\"\n    | \"pulse\"\n    | \"chasing-dots\"\n    | \"circle\"\n    | \"cube-grid\"\n    | \"wordpress\"\n    | \"ball-grid-beat\"\n    | \"ball-grid-pulse\"\n    | \"line-spin-fade-loader\"\n    | \"ball-spin-fade-loader\"\n    | \"ball-pulse-rise\"\n    | \"line-scale\"\n    | \"line-scale-pulse-out\"\n    | \"line-scale-pulse-out-rapid\"\n    | \"line-scale-party\"\n    | \"ball-triangle-path\"\n    | \"ball-scale-ripple-multiple\"\n    | \"ball-pulse-sync\"\n    | \"ball-beat\"\n    | \"ball-scale-multiple\"\n    | \"ball-zig-zag\"\n    | \"ball-zig-zag-deflect\"\n    | \"ball-clip-rotate\"\n    | \"ball-clip-rotate-pulse\"\n    | \"ball-clip-rotate-multiple\"\n    | \"ball-scale-ripple\"\n    | \"triangle-skew-spin\"\n    | \"pacman\";\n  color: string;\n};\nfunction Loading({ name, color }: LoadingProp) {\n  return (\n    <Center\n      backgroundColor=\"rgb(36,36,36)\"\n      height=\"100vh\"\n      colClass=\"col-auto loading\"\n    >\n      <Spinner name={name} color={color} />\n    </Center>\n  );\n}\n\nexport default Loading;\n","import React, { useEffect, useState } from \"react\";\nimport Center from \"../componenets/Center\";\nimport { IconInfo, WeatherInfo } from \"../helpers/interfaces\";\nimport { refreshTMWeather } from \"../helpers/functions\";\nimport ReactDatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport Form from \"react-bootstrap/Form\";\nimport Loading from \"../componenets/Loading\";\nimport Forecast from \"./Forecast\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport { withRouter } from \"react-router-dom\";\nimport Footer from \"../componenets/Footer\";\nimport { relative } from \"path\";\n\ntype TimeMachineProp = {\n  loaded: boolean;\n  unit: \"C\" | \"F\";\n  setLoaded: React.Dispatch<React.SetStateAction<boolean>>;\n  setWeather: React.Dispatch<React.SetStateAction<WeatherInfo & IconInfo>>;\n};\n\nfunction TimeMachine({ unit }: TimeMachineProp) {\n  let prefix = \"col col-auto my-auto ml-auto mr-auto\";\n  const [weatherInfo, setTMWeather] = useState(\n    JSON.parse(sessionStorage.TMWeather)\n  );\n  const [TMLoaded, setTMLoaded] = useState(false);\n  const [time, setTime] = useState(new Date());\n  useEffect(() => {\n    if (!TMLoaded)\n      refreshTMWeather(setTMWeather, weatherInfo, setTMLoaded, time);\n  }, [TMLoaded, time]);\n  if (TMLoaded)\n    return (\n      <div className=\"main\">\n        <Center height=\"25vh\" colClass=\"col-auto\">\n          <Form>\n            <ReactDatePicker\n              selected={time}\n              className=\"form-control\"\n              onChange={(date: Date) => {\n                setTMLoaded(false);\n                setTime(date);\n              }}\n            />\n          </Form>\n        </Center>\n        <Center height=\"100%\" colClass=\"col col-lg-6\">\n          <Row\n            style={{\n              textAlign: \"left\",\n              color: \"white\",\n              margin: \"0.2vw\",\n              width: \"100%\",\n              borderTop: \"1px solid white\",\n              borderBottom: \"1px solid white\",\n              height: \"40px\",\n              fontWeight: \"bold\",\n            }}\n          >\n            <Col bsPrefix={\"col col-1 my-auto ml-auto mr-auto\"}>{\"Time\"}</Col>\n            <Col\n              style={{ marginLeft: \"5%\" }}\n              bsPrefix={\"col col-2 my-auto mr-auto\"}\n            >\n              {\"Desc\"}\n            </Col>\n            <Col\n              bsPrefix={\n                \"col col-auto my-auto ml-auto mr-auto d-none d-sm-block\"\n              }\n            >\n              {\"Skycon\"}\n            </Col>\n            <Col bsPrefix={prefix}>{\"Rain %\"}</Col>\n            <Col bsPrefix={prefix}>{\"Temp\"}</Col>\n            <Col bsPrefix={prefix}>{\"Feels\"}</Col>\n          </Row>\n        </Center>\n        <Forecast id=\"time-machine\" unit={unit} tm={true} />\n        <Footer style={{ position: \"relative\" }} />\n      </div>\n    );\n  else return <Loading name=\"rotating-plane\" color=\"white\" />;\n}\n\nexport default TimeMachine;\n","import React, { useEffect, useState } from \"react\";\nimport \"./App.scss\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Header from \"./componenets/Header\";\nimport Center from \"./componenets/Center\";\nimport Home from \"./pages/Home\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport TimeMachine from \"./pages/TimeMachine\";\nimport { Geo, WeatherInfo } from \"./helpers/interfaces\";\nimport Loading from \"./componenets/Loading\";\nimport { initWeather } from \"./helpers/functions\";\n\nfunction App() {\n  let options = {\n    color: \"white\",\n    iconHeight: 130,\n    iconWidth: 130\n  } as WeatherInfo;\n\n  const [weather, setWeather] = useState(options);\n  const [loaded, setLoaded] = useState(false);\n  const [unit, setUnit] = useState(\"F\" as \"C\" | \"F\");\n  const [blocked, setBlocked] = useState(false);\n  sessionStorage.setItem(\"unit\", unit);\n\n  useEffect(function () {\n    let position = {} as Geo;\n    initWeather(position, options, setLoaded, setBlocked);\n  }, []);\n  if (loaded)\n    return (\n      <Router>\n        <Header\n          setUnit={setUnit}\n          props={{ variant: \"tabs\", defaultActiveKey: \"/home\" }}\n        />\n        <Switch>\n          <Route\n            exact\n            path=\"/Weather/\"\n            component={() => (\n              <Home\n                {...{\n                  unit: unit,\n                  weatherInfo: weather,\n                  setWeather: setWeather,\n                  blocked: blocked,\n                  setBlocked: setBlocked,\n                  loaded: loaded,\n                  setLoaded: setLoaded,\n                }}\n              />\n            )}\n          />\n          <Route\n            exact\n            path=\"/Weather/timemachine\"\n            component={() => (\n              <TimeMachine\n                {...{\n                  unit: unit,\n                  weatherInfo: weather,\n                  setWeather: setWeather,\n                  blocked: blocked,\n                  setBlocked: setBlocked,\n                  loaded: loaded,\n                  setLoaded: setLoaded,\n                }}\n              />\n            )}\n          />\n        </Switch>\n      </Router>\n    );\n  else if (blocked)\n    return (\n      <Center colClass=\"col col-auto\" height=\"93vh\">\n        <div className=\"blocked\">\n          Location service blocked, cannot retrieve weather.\n        </div>\n      </Center>\n    );\n  else return <Loading name=\"rotating-plane\" color=\"white\" />;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}