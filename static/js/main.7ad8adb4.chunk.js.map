{"version":3,"sources":["componenets/Center.tsx","componenets/Header.tsx","componenets/Location.tsx","componenets/Icon.tsx","componenets/Temperature.tsx","componenets/Description.tsx","componenets/Footer.tsx","helpers/functions.ts","componenets/Day.tsx","pages/Forecast.tsx","pages/Home.tsx","pages/TimeMachine.tsx","componenets/Loading.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Center","id","children","height","colClass","backgroundColor","Row","style","className","Header","props","setUnit","Nav","Item","Link","as","to","bsPrefix","offlabel","onlabel","size","onstyle","offstyle","checked","onChange","sessionStorage","unit","Location","location","Icon","options","useEffect","icons","Skycons","color","add","instance","icon","play","width","iconWidth","iconHeight","Temperature","tempC","tempF","Description","description","Footer","weather","a","getWeather","JSON","parse","position","fetch","lat","long","response","json","data","celsius","fahrenheit","epochToDate","epoch","date","Date","setUTCSeconds","Day","day","precipitation","high","low","celsiusL","Math","round","celsiusH","textAlign","margin","Col","getDay","paddingRight","paddingLeft","Forecast","week","daily","pop","padding","map","idx","time","temperatureHigh","temperatureLow","precipProbability","key","Home","weatherInfo","fontSize","TimeMachine","Loading","name","App","useState","setWeather","loaded","setLoaded","blocked","setBlocked","setItem","positon","then","newOptions","Object","assign","timezone","split","replace","currently","temperature","summary","stringify","refreshWeather","navigator","geolocation","getCurrentPosition","coords","longitude","latitude","alert","initWeather","variant","defaultActiveKey","exact","path","component","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.7ad8adb4.chunk.js","sourcesContent":["import React, { ReactNode } from \"react\";\nimport Row from \"react-bootstrap/Row\";\n\ntype Center = {\n  children?: ReactNode;\n  height: string;\n  id?: string;\n  backgroundColor?: string;\n  colClass: number | string;\n};\nfunction Center({ id, children, height, colClass, backgroundColor }: Center) {\n  return (\n    <Row id={id} style={{ height: height, backgroundColor: backgroundColor }}>\n      <div className={`col ${colClass} ml-auto mr-auto my-auto`}>\n        {children}\n      </div>\n    </Row>\n  );\n}\n\nexport default Center;\n","import React from \"react\";\nimport Nav, { NavProps } from \"react-bootstrap/Nav\";\nimport { Link } from \"react-router-dom\";\nimport BootstrapSwitchButton from \"bootstrap-switch-button-react\";\nimport Center from \"./Center\";\n\ntype HeaderProp = {\n  props: NavProps;\n  setUnit: React.Dispatch<React.SetStateAction<\"C\" | \"F\">>;\n};\nfunction Header({ props, setUnit }: HeaderProp) {\n  function handleUnitChange() {\n    if (sessionStorage.unit === \"F\") setUnit(\"C\");\n    else setUnit(\"F\");\n  }\n  return (\n    <Nav {...props}>\n      <Nav.Item>\n        <Nav.Link as={Link} to=\"/Weather/\">\n          Home\n        </Nav.Link>\n      </Nav.Item>\n      <Nav.Item>\n        <Nav.Link as={Link} to=\"/Weather/timemachine\">\n          Time Machine\n        </Nav.Link>\n      </Nav.Item>\n      <Nav.Item bsPrefix=\"ml-auto mr-3\">\n        <Center height=\"100%\" colClass=\"col-auto\">\n          <BootstrapSwitchButton\n            offlabel=\"°C\"\n            onlabel=\"°F\"\n            size=\"sm\"\n            onstyle=\"dark\"\n            offstyle=\"secondary\"\n            checked={true}\n            onChange={handleUnitChange}\n          />\n        </Center>\n      </Nav.Item>\n    </Nav>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\nimport CSS from \"csstype\";\ntype LocationProp = {\n  location: string;\n  style?: CSS.Properties;\n};\n\nfunction Location({ style, location }: LocationProp) {\n  return (\n    <div style={style} className={\"location\"}>\n      {location}\n    </div>\n  );\n}\n\nexport default Location;\n","import React, { useEffect } from \"react\";\nimport { Skycons } from \"skycons-ts\";\nimport { IconInfo } from \"../helpers/interfaces\";\ntype IconProp = {\n  options: IconInfo;\n};\n\nfunction Icon({ options }: IconProp) {\n  useEffect(function () {\n    let icons = new Skycons({ color: options.color });\n    icons.add(`icon${options.instance}`, options.icon);\n    icons.play();\n  });\n  return (\n    <canvas\n      id={`icon${options.instance}`}\n      width={options.iconWidth}\n      height={options.iconHeight}\n    />\n  );\n}\n\nexport default Icon;\n","import React, { CSSProperties } from \"react\";\ntype TemperatureProp = {\n  tempC: number;\n  tempF: number;\n  unit: \"F\" | \"C\";\n  style?: CSSProperties;\n};\nfunction Temperature({ style, tempC, tempF, unit }: TemperatureProp) {\n  if (unit === \"C\")\n    return (\n      <div style={style} className=\"temp-c\">\n        {tempC}\n      </div>\n    );\n  else\n    return (\n      <div style={style} className=\"temp-f\">\n        {tempF}\n      </div>\n    );\n}\nexport default Temperature;\n","import React from \"react\";\nimport CSS from \"csstype\";\ntype DescriptionProp = {\n  description: string;\n  style?: CSS.Properties;\n};\nfunction Description({ style, description }: DescriptionProp) {\n  return (\n    <div style={style} className=\"description\">\n      {description}\n    </div>\n  );\n}\n\nexport default Description;\n","import React from \"react\"\n\nfunction Footer() {\nreturn <div className=\"footer\">Copyright © 2020. Developed by Kolawole Campbell.</div>;\n}\n\nexport default Footer","import {Geo, WeatherInfo} from \"./interfaces\";\nimport React from \"react\";\nimport {DayOfWeek} from \"./types\";\n\n async function weather() {\n    return await getWeather(JSON.parse(sessionStorage.position));\n}\n\n async function getWeather(position: Geo){\n    let response = await fetch(`https://cors-anywhere.herokuapp.com/https://api.darksky.net/forecast/9ab479cdd941d8bb66332fa8f81551b9/${position.lat},${position.long}`,{\n    });\n    let data = await response.json();\n    return data;\n}\n\nexport function initWeather(position: Geo, weatherInfo: WeatherInfo, setLoaded :React.Dispatch<React.SetStateAction<boolean>>, setBlocked :React.Dispatch<React.SetStateAction<boolean>>){\n    function success(location: any) {\n        position.long = location.coords.longitude;\n        position.lat = location.coords.latitude;\n        sessionStorage.setItem(\"position\", JSON.stringify(position))\n        weather().then(weather=> {\n                weatherInfo.location = weather.timezone.split(\"/\")[1].replace(\"_\", \" \");\n                weatherInfo.tempF =Math.round( weather.currently.temperature);\n                weatherInfo.tempC =Math.round(  celsius( weather.currently.temperature));\n                weatherInfo.icon = weather.currently.icon;\n                weatherInfo.description = weather.currently.summary;\n                sessionStorage.setItem(\"weather\", JSON.stringify(weather));\n                setLoaded(true);\n            })\n    }\n    function fail() {\n        setBlocked(true);\n    }\n    if (navigator.geolocation) {\n         navigator.geolocation.getCurrentPosition(success, fail);\n    } else {\n        alert(\"Sorry, your browser does not support geolocation services.\");\n    }\n};\n\nexport function refreshWeather(setWeather :React.Dispatch<React.SetStateAction<WeatherInfo>>, setLoaded :React.Dispatch<React.SetStateAction<boolean>>){\n    weather().then(weather=> {\n        setWeather((options)=>{\n            let newOptions = Object.assign({}, options);\n            newOptions.location = weather.timezone.split(\"/\")[1].replace(\"_\", \" \");\n            newOptions.tempF =Math.round( weather.currently.temperature);\n            newOptions.tempC =Math.round(  celsius( weather.currently.temperature));\n            newOptions.icon = weather.currently.icon;\n            newOptions.description = weather.currently.summary;\n            sessionStorage.setItem(\"weather\", JSON.stringify(weather));\n            setLoaded(true);\n            return newOptions;\n        });\n    });\n}\n\nexport function celsius(fahrenheit: number){\nreturn (fahrenheit - 32) * 5 / 9;\n}\n\nexport function truthy (val:any) {\n    if (val) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\nexport function epochToDate(epoch: number) {\n    let date = new Date(0);\n    date.setUTCSeconds(epoch);\n    return date;\n}\n\nexport function dateToDayOfWeek(date: Date): DayOfWeek {\n    let dayLookup: Array<DayOfWeek>;\n    dayLookup = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n    return dayLookup[date.getDay()];\n}\n","import React, { CSSProperties } from \"react\";\nimport { IconKey } from \"skycons-ts\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Icon from \"./Icon\";\nimport { celsius, dateToDayOfWeek } from \"../helpers/functions\";\nimport Temperature from \"./Temperature\";\n\ntype DayProp = {\n  day: Date;\n  precipitation: number;\n  icon: IconKey;\n  low: number;\n  high: number;\n  unit: \"C\" | \"F\";\n};\n\nfunction Day({ day, precipitation, high, icon, low, unit }: DayProp) {\n  let celsiusL = Math.round(celsius(low));\n  let celsiusH = Math.round(celsius(high));\n  let style = {\n    textAlign: \"left\",\n    margin: \"0.2vw\",\n  } as CSSProperties;\n  let prefix = \"col my-auto\";\n  return (\n    <Row style={{ ...style }}>\n      <Col bsPrefix=\"col col-3 my-auto\">{`${dateToDayOfWeek(day)}`}</Col>\n      <Col\n        style={{ paddingRight: \"0px\" }}\n        bsPrefix={`col col-3 my-auto precipitation`}\n      >{`${Math.round(precipitation * 100)}%`}</Col>\n      <Col style={{ paddingLeft: \"0px\" }} bsPrefix={prefix}>\n        <Icon\n          options={{\n            color: \"white\",\n            icon: icon,\n            iconHeight: 40,\n            iconWidth: 40,\n            instance: day.getDay() + 2,\n          }}\n        />\n      </Col>\n      <Col bsPrefix={prefix}>\n        <Temperature style={style} tempC={celsiusL} tempF={low} unit={unit} />\n      </Col>\n      <Col bsPrefix={prefix}>\n        <Temperature style={style} tempC={celsiusH} tempF={high} unit={unit} />\n      </Col>\n    </Row>\n  );\n}\n\nexport default Day;\n","import React from \"react\";\nimport Day from \"../componenets/Day\";\nimport { epochToDate } from \"../helpers/functions\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\ntype ForecastProp = {\n  id: string;\n  unit: \"C\" | \"F\";\n};\n\nfunction Forecast({ id, unit }: ForecastProp) {\n  if (sessionStorage.weather) {\n    const weather = JSON.parse(sessionStorage.weather);\n    const week = weather.daily.data;\n    week.pop();\n    return (\n      <Row id={id} style={{ padding: \"15px\" }}>\n        <Col bsPrefix=\"col col-xs-auto col-lg-6 mr-auto ml-auto\">\n          {week.map((day: any, idx: number) => (\n            <Day\n              day={epochToDate(day.time)}\n              high={Math.round(day.temperatureHigh)}\n              icon={day.icon}\n              low={Math.round(day.temperatureLow)}\n              precipitation={day.precipProbability}\n              key={idx}\n              unit={unit}\n            />\n          ))}\n        </Col>\n      </Row>\n    );\n  } else return <div></div>;\n}\n\nexport default Forecast;\n","import Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Center from \"../componenets/Center\";\nimport Location from \"../componenets/Location\";\nimport Icon from \"../componenets/Icon\";\nimport Temperature from \"../componenets/Temperature\";\nimport Description from \"../componenets/Description\";\nimport Footer from \"../componenets/Footer\"\nimport React from \"react\";\nimport { IconInfo, WeatherInfo } from \"../helpers/interfaces\";\nimport Forecast from \"./Forecast\";\n\nfunction Home(weatherInfo: WeatherInfo & IconInfo) {\n  return (\n    <div className=\"main\">\n      <Center id=\"home\" colClass=\"col-xs-auto col-lg-6\" height=\"100%\">\n        <Row style={{ margin: \"40px 0 60px 0\" }}>\n          <Col>\n            <Center colClass=\"col-auto\" height=\"100%\">\n              <Location\n                style={{ fontSize: \"2.7em\" }}\n                location={weatherInfo.location}\n              />\n            </Center>\n          </Col>\n          <Col>\n            <Center colClass=\"col-auto\" height=\"100%\">\n              <Icon options={weatherInfo} />\n            </Center>\n          </Col>\n        </Row>\n        <Row style={{ margin: \"0 0 40px 0\" }}>\n          <Col>\n            <Center colClass=\"col-auto\" height=\"100%\">\n              <Temperature\n                style={{ textAlign: \"center\", fontSize: \"3rem\" }}\n                tempC={weatherInfo.tempC}\n                tempF={weatherInfo.tempF}\n                unit={sessionStorage.unit}\n              />\n              <Description\n                style={{ fontSize: \"1rem\" }}\n                description={weatherInfo.description}\n              />\n            </Center>\n          </Col>\n        </Row>\n      </Center>\n      <Forecast id=\"forecast\" unit={sessionStorage.unit} />\n      <Footer/>\n    </div>\n  );\n}\n\nexport default Home;\n","import React from \"react\";\nimport Center from \"../componenets/Center\";\n\nfunction TimeMachine() {\n  return (\n    <Center height=\"100vh\" colClass=\"col-auto\">\n      <div style={{ fontSize: \"2rem\", textAlign: \"center\" }}>Coming Soon</div>\n    </Center>\n  );\n}\n\nexport default TimeMachine;\n","import React from \"react\";\nimport Spinner from \"react-spinkit\";\nimport Center from \"./Center\";\ntype LoadingProp = {\n  name:\n    | \"three-bounce\"\n    | \"double-bounce\"\n    | \"rotating-plane\"\n    | \"folding-cube\"\n    | \"wave\"\n    | \"wandering-cubes\"\n    | \"pulse\"\n    | \"chasing-dots\"\n    | \"circle\"\n    | \"cube-grid\"\n    | \"wordpress\"\n    | \"ball-grid-beat\"\n    | \"ball-grid-pulse\"\n    | \"line-spin-fade-loader\"\n    | \"ball-spin-fade-loader\"\n    | \"ball-pulse-rise\"\n    | \"line-scale\"\n    | \"line-scale-pulse-out\"\n    | \"line-scale-pulse-out-rapid\"\n    | \"line-scale-party\"\n    | \"ball-triangle-path\"\n    | \"ball-scale-ripple-multiple\"\n    | \"ball-pulse-sync\"\n    | \"ball-beat\"\n    | \"ball-scale-multiple\"\n    | \"ball-zig-zag\"\n    | \"ball-zig-zag-deflect\"\n    | \"ball-clip-rotate\"\n    | \"ball-clip-rotate-pulse\"\n    | \"ball-clip-rotate-multiple\"\n    | \"ball-scale-ripple\"\n    | \"triangle-skew-spin\"\n    | \"pacman\";\n  color: string;\n};\nfunction Loading({ name, color }: LoadingProp) {\n  return (\n    <Center\n      backgroundColor=\"rgb(36,36,36)\"\n      height=\"100vh\"\n      colClass=\"col-auto loading\"\n    >\n      <Spinner name={name} color={color} />\n    </Center>\n  );\n}\n\nexport default Loading;\n","import React, { useEffect, useState } from \"react\";\nimport \"./App.scss\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Header from \"./componenets/Header\";\nimport Center from \"./componenets/Center\"\nimport Home from \"./pages/Home\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport TimeMachine from \"./pages/TimeMachine\";\nimport { initWeather, refreshWeather, truthy } from \"./helpers/functions\";\nimport { Geo, WeatherInfo } from \"./helpers/interfaces\";\nimport Loading from \"./componenets/Loading\";\n\nfunction App() {\n  let options = {\n    color: \"white\",\n    iconHeight: 128,\n    iconWidth: 128,\n    instance: 1,\n    description: \"rain\",\n  } as WeatherInfo;\n\n  const [weather, setWeather] = useState(options);\n  let [loaded, setLoaded] = useState(false);\n  let [unit, setUnit] = useState(\"F\" as \"C\" | \"F\");\n  let [blocked, setBlocked] = useState(false);\n  sessionStorage.setItem(\"unit\", unit);\n  useEffect(\n    function () {\n      let position = {} as Geo;\n      if (!loaded) {\n        if (!truthy(sessionStorage.positon))\n          initWeather(position, options, setLoaded, setBlocked);\n        else refreshWeather(setWeather, setLoaded);\n      }\n    },\n    [loaded, unit, options, blocked]\n  );\n  if (loaded)\n    return (\n      <Router>\n        <Header\n          setUnit={setUnit}\n          props={{ variant: \"tabs\", defaultActiveKey: \"/home\" }}\n        />\n        <Switch>\n          <Route exact path=\"/Weather/\" component={() => <Home {...weather} />} />\n          <Route exact path=\"/Weather/timemachine\" component={TimeMachine} />\n        </Switch>\n      </Router>\n    );\n  else if(blocked) return <Center colClass=\"col col-auto\" height=\"93vh\"><div className=\"blocked\">Location service blocked, cannot retrieve weather.</div></Center>\n  else return <Loading name=\"rotating-plane\" color=\"white\" />;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}